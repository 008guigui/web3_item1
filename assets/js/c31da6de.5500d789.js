"use strict";(self.webpackChunkgrants=self.webpackChunkgrants||[]).push([[2038],{9627:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=r(87462),n=(r(67294),r(3905));r(95657);const i={},o="Browser based IDE for ink! Smart Contracts",s={unversionedId:"docs/RFPs/Open/IDE_for_ink_Smart_Contracts",id:"docs/RFPs/Open/IDE_for_ink_Smart_Contracts",title:"Browser based IDE for ink! Smart Contracts",description:"Status:* Open",source:"@site/docs/RFPs/Open/IDE_for_ink_Smart_Contracts.md",sourceDirName:"docs/RFPs/Open",slug:"/docs/RFPs/Open/IDE_for_ink_Smart_Contracts",permalink:"/Grants-Program/docs/RFPs/Open/IDE_for_ink_Smart_Contracts",draft:!1,editUrl:"https://github.com/w3f/Grants-Program/edit/master/docs/RFPs/Open/IDE_for_ink_Smart_Contracts.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Wallet Aggregator Library",permalink:"/Grants-Program/docs/RFPs/Closed/wallet-aggregator-library"},next:{title:"RFP: ISO 20022",permalink:"/Grants-Program/docs/RFPs/Open/ISO_20022"}},l={},p=[{value:"Project Description \ud83d\udcc4",id:"project-description-",level:2},{value:"Deliverables",id:"deliverables",level:2}],c={toc:p},u="wrapper";function m(t){let{components:e,...r}=t;return(0,n.kt)(u,(0,a.Z)({},c,r,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"browser-based-ide-for-ink-smart-contracts"},"Browser based IDE for ink! Smart Contracts"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Status:")," Open"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Proposer:")," ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/Noc2"},"David Hawig"))),(0,n.kt)("h2",{id:"project-description-"},"Project Description \ud83d\udcc4"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/paritytech/ink"},"ink!")," is a domain-specific language for writing smart contracts in Rust and compiles to Wasm code. You can deploy ink! contracts on parachains that support the contracts pallet, as well as on stand-alone blockchains built with Substrate."),(0,n.kt)("p",null,"The goal of this RFP is to find teams that would like to develop or maintain a browser-based playground for editing, compiling & sharing ink! smart contracts. The ",(0,n.kt)("a",{parentName:"p",href:"https://ink-playground.substrate.io/"},"ink! Playground"),", previously maintained by Parity, utilizes Typescript, React, Docker, and ",(0,n.kt)("a",{parentName:"p",href:"https://microsoft.github.io/monaco-editor/"},"Monaco Editor"),". Teams could continue to work on the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/paritytech/ink-playground"},"ink! Playground"),", or choose to build something new if desired. For example, it might be possible to leverage GitHub Codespaces in combination with GitHub Actions or the previously developed ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/blockchain-it-hr/ink-remix-plugin"},"ink! Remix plugin"),"."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Useful resources:")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://use.ink/"},"ink!")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://ink-playground.substrate.io"},"ink-playground")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/paritytech/ink-playground"},"GitHub ink-playground")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/blockchain-it-hr/ink-remix-plugin"},"GitHub: ink! Remix plugin"))),(0,n.kt)("h2",{id:"deliverables"},"Deliverables"),(0,n.kt)("p",null,"The structure of the grant and the milestones depends highly on the project itself. It\u2019s therefore up to the applying team to come up with a milestone and delivery structure."))}m.isMDXComponent=!0}}]);